Program.Sub.ScreenSU.Start
gui.Form1..create
gui.Form1..caption("Select a Part")
gui.Form1..size(4485,2325)
gui.Form1..position(0,0)
gui.Form1..event(unload,Unload)
gui.Form1..alwaysontop(False)
gui.Form1..fontname("Arial")
gui.Form1..fontsize(8)
gui.Form1..forecolor(0)
gui.Form1..fontstyle(,,,,)
gui.Form1..BackColor(-2147483633)
gui.Form1..controlbox(True)
gui.Form1..maxbutton(True)
gui.Form1..minbutton(True)
gui.Form1..mousepointer(0)
gui.Form1..moveable(True)
gui.Form1..sizeable(True)
gui.Form1..ShowInTaskBar(True)
gui.Form1..titlebar(True)
gui.Form1.txt1.create(textbox,"",True,2955,300,0,350,400,True,0,Arial,8,-2147483643,1)
gui.Form1.cmdPrtBrwse.create(button)
gui.Form1.cmdPrtBrwse.caption("^")
gui.Form1.cmdPrtBrwse.visible(True)
gui.Form1.cmdPrtBrwse.size(480,300)
gui.Form1.cmdPrtBrwse.zorder(0)
gui.Form1.cmdPrtBrwse.position(3310,400)
gui.Form1.cmdPrtBrwse.enabled(True)
gui.Form1.cmdPrtBrwse.fontname("Arial")
gui.Form1.cmdPrtBrwse.fontsize(8)
gui.Form1.cmdPrtBrwse.event(click,cmdprtbrwse_click)
gui.Form1.cmdOk.create(button)
gui.Form1.cmdOk.caption("Ok")
gui.Form1.cmdOk.visible(True)
gui.Form1.cmdOk.size(855,375)
gui.Form1.cmdOk.zorder(0)
gui.Form1.cmdOk.position(2890,1100)
gui.Form1.cmdOk.enabled(True)
gui.Form1.cmdOk.fontname("Arial")
gui.Form1.cmdOk.fontsize(8)
gui.Form1.cmdOk.event(click,cmdok_click)


Program.Sub.ScreenSU.End

Program.Sub.Preflight.Start


Variable.UDT.PART.Define("PrdRef",String,"PART")
Variable.UDT.PART.Define("MatRef",String,"PRODUCT_TYPE")
Variable.UDT.PART.Define("Height",Float,"THICKNESS")
Variable.UDT.PART.Define("Length",Float,"LENGTH")
Variable.UDT.PART.Define("Width",Float,"WIDTH")
Variable.UDT.PART.Define("RCategory",String)
Variable.UDT.PART.Define("Type",String)
Variable.UDT.PART.Define("WhRef",String)
Variable.UDT.PART.Define("Quantity",Float,"QTY_ONHAND")
Variable.uGlobal.uPart.Declare("PART")


Program.Sub.Preflight.End

Program.Sub.Main.Start
'Coded by: JCT
'Project Start Date: 05/31/2011
'
'v.passed.SELECTED-ROW
'v.passed.AUX001
V.Local.sFile.Declare(String)
V.Local.bExists.Declare(Boolean)
V.Local.sPart.Declare(String)
V.Local.iSelRow.Declare(Long)
V.Local.sString.Declare(String)

F.Intrinsic.String.Concat(V.System.Temp,"\tempIssue.txt",V.Local.sFile)
F.Intrinsic.Math.Sub(V.passed.SELECTED-ROW,1,V.Local.iSelRow)

F.ODBC.Connection!Con.OpenConnection(V.Ambient.PDSN,V.Ambient.PUser,V.Ambient.PPass)
F.Intrinsic.Control.If(V.Caller.Hook,=,28840)
	F.Intrinsic.File.Exists(V.Local.sFile,V.Local.bExists)
		F.Intrinsic.Control.If(V.Local.bExists,=,True)
			F.Intrinsic.File.DeleteFile(V.Local.sFile)
		F.Intrinsic.Control.EndIf
		Function.Intrinsic.BDF.Load("AUX001","AUX001")
		Function.Intrinsic.BDF.ReadRow("AUX001",V.Local.iSelRow,V.Local.sPart)
		F.Intrinsic.String.Split(V.Local.sPart,"|~|",V.Local.sPart)
		F.Intrinsic.String.Concat(V.Local.sPart(1),"*!*",V.Local.sPart(8),V.Local.sString)
	F.Intrinsic.File.String2File(V.Local.sFile,V.Local.sString.Trim)
	F.Intrinsic.Control.CallSub(Unload)
F.Intrinsic.Control.elseIf(V.Caller.hook,=,28842)
	F.Intrinsic.Control.CallSub(Cmdok_click)
F.Intrinsic.Control.Else
	Gui.Form1..Show
F.Intrinsic.Control.EndIf

Program.Sub.Main.End

Program.Sub.Unload.Start


F.ODBC.Connection!Con.Close
F.Intrinsic.Control.end

Program.Sub.Unload.EndProgram.Sub.Main.End

Program.Sub.Movement.Start
V.Local.sHold.Declare(String)
V.Local.sJob.Declare(String)
V.Local.sSelOps.Declare(String)
V.Local.sSelMat.Declare(String)
V.Local.sWCString.Declare(String)
V.Local.sFieldRef.Declare(String)
V.Local.sFiedlValue.Declare(String)
V.Local.sFldType.Declare(String)
V.Local.iFor.Declare(Long)
V.Local.iForB.Declare(Long)
V.Local.sOnhold.Declare(String)
V.Local.sLocked.Declare(String)
V.Local.sMatIsued.Declare(String)
V.Local.sRunUnattend.Declare(String)
V.Local.smustnest.Declare(String)
V.Local.sSinglePrg.declare(String)
V.Local.sHoist.Declare(String)
V.Local.sRevDate.Declare(String)
V.Local.sRelDate.Declare(String)
V.Local.sDDate.Declare(String)
V.Local.sSeqDate.Declare(String)
V.Local.sComName.Declare(String)
V.Local.sFieldValue.Declare(String)
V.Local.sPart.Declare(String)
V.Local.sFile.Declare(String)
V.Local.sMsg.Declare(String)


V.uGlobal.uPart.Redim(-1,-1)
F.Intrinsic.Control.If(V.Caller.Hook,=,28842)
	F.Intrinsic.String.Concat(V.System.Temp,"\tempIssue.txt",V.Local.sFile)
	F.Intrinsic.File.File2String(V.Local.sFile,V.Local.sPart)
	F.Intrinsic.String.Split(V.Local.sPart,"*!*",V.Local.sPart)
F.Intrinsic.Control.Else
	V.Local.sPart.Set(V.Screen.Form1!txt1.Text)
F.Intrinsic.Control.EndIf

'F.Intrinsic.String.Concat("Part: ",V.Local.sPart.Trim,V.Local.sMsg)
'F.Intrinsic.UI.Msgbox(V.Local.sMsg)
'get all part information
F.Intrinsic.String.Concat("select distinct INVENTORY_MSTR.PART, ILT_NEST_MAT_CODE.PRODUCT_TYPE,THICKNESS,LENGTH,WIDTH,QTY_ONHAND","",V.Local.sSelMat)
F.Intrinsic.String.Concat(V.Local.sSelMat," from ILT_NEST_MAT_CODE inner join INVENTORY_MSTR on ILT_NEST_MAT_CODE.PART=INVENTORY_MSTR.PART",V.Local.sSelMat)
F.Intrinsic.String.Concat(V.Local.sSelMat," where ILT_NEST_MAT_CODE.PART='",V.Local.sPart(0).trim,"'",V.Local.sSelMat)
	F.ODBC.Connection!Con.OpenRecordsetRO("rstMat",V.Local.sSelMat)
		F.Intrinsic.Control.If(V.ODBC.Con!rstMat.EOF,=,False)
			F.Intrinsic.Variable.LoadUDTFromRecordset("Con","rstMat","v.uGlobal.uPart",True,0)
		F.Intrinsic.Control.EndIf
	F.ODBC.Con!rstMat.Close

	f.Intrinsic.Variable.UDTSetMemberValue(V.uGlobal.uPart!WhRef,"WRH")
	f.Intrinsic.Variable.UDTSetMemberValue(V.uGlobal.uPart!TYPE,"2")
	f.Intrinsic.Variable.UDTSetMemberValue(V.uGlobal.uPart!RCategory,"51")
'--------------------------------------------------------------------------------------------------

'create array of field references
	F.Intrinsic.String.Split("PrdRef*!*MatRef*!*Height*!*Length*!*Width*!*RCategory","*!*",V.Local.sFieldRef)
'create array of fldtype
	F.Intrinsic.String.Split("20*!*20*!*100*!*100*!*100*!*10","*!*",V.Local.sFldType)

F.Intrinsic.Control.For(V.Local.iFor,V.uGlobal.uPart!PrdRef.LBound,V.uGlobal.uPart!PrdRef.UBound,1)
'create node
F.global.xml.createElementNode("xmlDoc","COMMAND","")
	F.global.xml.createAttributeNode("xmlDoc","Name","IMPORT")
	F.global.xml.createAttributeNode("xmlDoc","TblRef","PRODUCTS")

F.Intrinsic.String.Concat(V.Ambient.NewLine,V.Ambient.Tab,V.Local.shold)
	F.Global.XML.AppendTextNode("xmlDoc","COMMAND",V.Local.sHold)
	F.Global.XML.SetAttributeToNode("xmlDoc","COMMAND","Name")
	F.Global.XML.SetAttributeToNode("xmlDoc","COMMAND","TblRef")

	F.Global.XML.DestroyNode("xmlDoc","Name")
	F.Global.XML.DestroyNode("xmlDoc","TblRef")

F.Intrinsic.Debug.Stop
	F.Intrinsic.String.Concat(V.uGlobal.uPart(v.Local.iFor)!PrdRef,"*!*",V.uGlobal.uPart(v.Local.iFor)!MatRef,"*!*",V.uGlobal.uPart(v.Local.iFor)!Height,"*!*",V.uGlobal.uPart(v.Local.iFor)!Length,"*!*",V.uGlobal.uPart(v.Local.iFor)!Width,"*!*",V.uGlobal.uPart(v.Local.iFor)!RCategory,V.Local.sFieldValue)
	F.Intrinsic.String.Split(V.Local.sFieldValue,"*!*",V.Local.sFieldValue)
	V.Local.sFiedlValue.RedimPreserve(0,4)

'loop for each attribute
	F.Intrinsic.Control.For(V.Local.iForB,V.Local.sFieldRef.LBound,V.Local.sFieldRef.UBound,1)
		F.global.xml.createElementNode("xmlDoc","FIELD","")
			F.global.xml.createAttributeNode("xmlDoc","FldRef",V.Local.sFieldRef(v.Local.iForB))
			F.global.xml.createAttributeNode("xmlDoc","FldValue",V.Local.sFieldValue(v.Local.iForB))
			F.global.xml.createAttributeNode("xmlDoc","FldType",V.Local.sFldType(v.Local.iForB))


		F.Global.XML.AppendTextNode("xmlDoc","COMMAND",V.Local.sHold)
		F.Global.XML.AppendNode("xmlDoc","COMMAND","FIELD")
			F.Global.XML.AppendTextNode("xmlDoc","FIELD",V.Local.sHold)
			F.Global.XML.SetAttributeToNode("xmlDoc","FIELD","FldRef")
			F.Global.XML.SetAttributeToNode("xmlDoc","FIELD","FldValue")
			F.Global.XML.SetAttributeToNode("xmlDoc","FIELD","FldType")

		F.Global.XML.DestroyNode("xmlDoc","FldRef")
		F.Global.XML.DestroyNode("xmlDoc","FldValue")
		F.Global.XML.DestroyNode("xmlDoc","FldType")
	F.global.xml.destroyNode("xmlDoc","FIELD")
	F.Intrinsic.Control.Next(V.Local.iForB)

'--------------------------------------------------------------------------------------------------

	F.global.xml.appendNodeToRoot("xmlDoc","COMMAND")

	F.Intrinsic.String.Concat(V.Ambient.NewLine,V.Ambient.Tab,V.Local.shold)
	F.global.xml.appendTextNode("xmlDoc","root",V.Local.shold)

F.global.xml.destroyNode("xmlDoc","COMMAND")


F.Intrinsic.String.Concat(V.Ambient.NewLine,V.Ambient.Tab,V.Local.shold)
F.global.xml.appendTextNode("xmlDoc","COMMAND",V.Local.shold)

F.global.xml.appendNodeToRoot("xmlDoc","COMMAND")
F.global.xml.destroyNode("xmlDoc","COMMAND")

'--------------------------------------------------------------------------------------------------
F.Intrinsic.Debug.Stop
'create array of field references
	F.Intrinsic.String.Split("TYPE*!*PRODUCT*!*WAREHOUSE*!*QUANTITY","*!*",V.Local.sFieldRef)
'create array of fldtype
	F.Intrinsic.String.Split("70*!*20*!*20*!*100","*!*",V.Local.sFldType)


'create node
F.global.xml.createElementNode("xmlDoc","COMMAND","")
	F.global.xml.createAttributeNode("xmlDoc","Name","Import")
	F.global.xml.createAttributeNode("xmlDoc","TblRef","MOVEMENTS")

F.Intrinsic.String.Concat(V.Ambient.NewLine,V.Ambient.Tab,V.Local.shold)
	F.Global.XML.AppendTextNode("xmlDoc","COMMAND",V.Local.sHold)
	F.Global.XML.SetAttributeToNode("xmlDoc","COMMAND","Name")
	F.Global.XML.SetAttributeToNode("xmlDoc","COMMAND","TblRef")

	F.Global.XML.DestroyNode("xmlDoc","Name")
	F.Global.XML.DestroyNode("xmlDoc","TblRef")

F.Intrinsic.Debug.Stop
F.Intrinsic.Control.If(V.Local.sPart(1),<,1)
	F.Intrinsic.Math.Mult(V.Local.sPart(1),-1,V.uGlobal.uPart(v.Local.iFor)!Quantity)
F.Intrinsic.Control.Else
	V.uGlobal.uPart(v.Local.iFor)!Quantity.Set(V.Local.sPart(1))
F.Intrinsic.Control.EndIf
F.Intrinsic.Debug.Stop
	F.Intrinsic.String.Concat(V.uGlobal.uPart(v.Local.iFor)!TYPE,"*!*",V.uGlobal.uPart(v.Local.iFor)!PrdRef,"*!*",V.uGlobal.uPart(v.Local.iFor)!WhRef,"*!*",V.uGlobal.uPart(v.Local.iFor)!Quantity,V.Local.sFieldValue)

	F.Intrinsic.String.Split(V.Local.sFieldValue,"*!*",V.Local.sFieldValue)
	V.Local.sFiedlValue.RedimPreserve(0,3)

'loop for each attribute
	F.Intrinsic.Control.For(V.Local.iForB,V.Local.sFieldRef.LBound,V.Local.sFieldRef.UBound,1)
		F.global.xml.createElementNode("xmlDoc","FIELD","")
			F.global.xml.createAttributeNode("xmlDoc","FldRef",V.Local.sFieldRef(v.Local.iForB))
			F.global.xml.createAttributeNode("xmlDoc","FldValue",V.Local.sFieldValue(v.Local.iForB))
			F.global.xml.createAttributeNode("xmlDoc","FldType",V.Local.sFldType(v.Local.iForB))


		F.Global.XML.AppendTextNode("xmlDoc","COMMAND",V.Local.sHold)
		F.Global.XML.AppendNode("xmlDoc","COMMAND","FIELD")
			F.Global.XML.AppendTextNode("xmlDoc","FIELD",V.Local.sHold)
			F.Global.XML.SetAttributeToNode("xmlDoc","FIELD","FldRef")
			F.Global.XML.SetAttributeToNode("xmlDoc","FIELD","FldValue")
			F.Global.XML.SetAttributeToNode("xmlDoc","FIELD","FldType")

		F.Global.XML.DestroyNode("xmlDoc","FldRef")
		F.Global.XML.DestroyNode("xmlDoc","FldValue")
		F.Global.XML.DestroyNode("xmlDoc","FldType")
	F.global.xml.destroyNode("xmlDoc","FIELD")
	F.Intrinsic.Control.Next(V.Local.iForB)

'--------------------------------------------------------------------------------------------------

	F.global.xml.appendNodeToRoot("xmlDoc","COMMAND")

	F.Intrinsic.String.Concat(V.Ambient.NewLine,V.Ambient.Tab,V.Local.shold)
	F.global.xml.appendTextNode("xmlDoc","root",V.Local.shold)

F.global.xml.destroyNode("xmlDoc","COMMAND")


F.Intrinsic.String.Concat(V.Ambient.NewLine,V.Ambient.Tab,V.Local.shold)
F.global.xml.appendTextNode("xmlDoc","COMMAND",V.Local.shold)

F.global.xml.appendNodeToRoot("xmlDoc","COMMAND")
F.global.xml.destroyNode("xmlDoc","COMMAND")
F.Intrinsic.Control.Next(V.Local.iFor)

Program.Sub.Movement.End

program.sub.cmdprtbrwse_click.start

V.Local.sTitles.Declare(String)
V.Local.sWidths.Declare(String)
V.Local.sRet.Declare(String)
V.Local.sSel.Declare(String)


F.Intrinsic.String.Split("Part*!*Description","*!*",V.Local.sTitles)
F.Intrinsic.String.Split("1500*!*3500","*!*",V.Local.sWidths)

F.Intrinsic.Ui.miniBrowser("Part","Con","select distinct PART,DESCRIPTION from INVENTORY_MSTR ",V.Local.sTitles,V.Local.sWidths,V.Local.sRet)
	F.Intrinsic.Control.If(V.Local.sRet,<>,"***CANCEL***")
		F.Intrinsic.String.Split(V.Local.sRet,"*!*",V.Local.sRet)
		Gui.Form1.txt1.Text(V.Local.sRet(0))
	F.Intrinsic.Control.Endif

program.sub.cmdprtbrwse_click.end

program.sub.cmdok_click.start

V.Local.sFileName.Declare(String)
V.Local.sFilePath.Declare(String)
V.Local.sHold.Declare(String)
V.Local.sFile.Declare(String)
V.Local.sPart.Declare(String)
V.Local.sdatetime.Declare(String)

F.Intrinsic.String.Concat(V.Ambient.Date.pervasivedate,V.Ambient.Time,V.Local.sdatetime)
F.Intrinsic.String.StripCharacters(V.Local.sdatetime,V.Local.sdatetime)
F.Intrinsic.String.Concat(V.System.Temp,"\tempIssue.txt",V.Local.sFile)
F.Intrinsic.File.File2String(V.Local.sFile,V.Local.sPart)

'V.Local.sFileName.Set("Inv_Exit.xml")
F.Intrinsic.String.Concat("Part_",V.Local.sPart.Trim,"_",V.Local.sdatetime,".xml",V.Local.sFileName)
F.Intrinsic.String.Concat(V.Caller.PluginsDir,"\Lantek\GSS\InventoryOut\",V.Local.sFilePath)
F.global.xml.createDocument("xmlDoc",False,True,False,False)

F.Intrinsic.UI.InvokeWaitDialog("Creating XML file.")
'set root node
F.global.xml.SetRoot("xmlDoc","DATAEX")
F.Intrinsic.String.Concat(V.Ambient.NewLine,V.Ambient.Tab,V.Local.shold)
F.global.xml.appendTextNode("xmlDoc","root",V.Local.shold)


F.Intrinsic.Control.CallSub(Movement)


F.global.xml.appendTextNode("xmlDoc","root",V.Ambient.NewLine)
'Saves document
F.global.xml.saveDocument("xmlDoc",V.Local.sFilePath,V.Local.sFileName)
'closes document
F.global.xml.CloseDocument("xmlDoc")

F.Intrinsic.UI.CloseWaitDialog
F.Intrinsic.UI.Msgbox("Create Completed")


F.Intrinsic.Control.CallSub(Unload)

program.sub.cmdok_click.end

Program.Sub.ScreenSS.Start
SS_Form1{{CAPTION::
SS_Form1.CTRL{{NAME::txtJob\\TYPE::2\\CAPTION::Job\\TABSTOP::1\\GROUP::-1\\BROWSER::1
SS_Form1.CTRL{{NAME::txtSuffix\\TYPE::2\\CAPTION::Suffix\\TABSTOP::2\\GROUP::-1\\BROWSER::0
SS_Form1.CTRL{{NAME::cmdOk\\TYPE::5\\CAPTION::Ok\\TABSTOP::3\\GROUP::-1\\BROWSER::0

Program.Sub.ScreenSS.End

